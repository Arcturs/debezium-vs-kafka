version: '3'
services:
  paymentDB:
    image: postgres:15.1-alpine
    restart: always
    ports:
      - "5435:5432"
    container_name: paymentDB
    environment:
      POSTGRES_USER: ${PAYMENT_DB_USERNAME}
      POSTGRES_PASSWORD: ${PAYMENT_DB_PASSWORD}
      POSTGRES_DB: ${PAYMENT_DB_NAME}
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - paymentdb_data:/var/lib/postgresql/data

  statisticDB:
    image: postgres:15.1-alpine
    restart: always
    ports:
      - "5434:5432"
    container_name: statisticDB
    environment:
      POSTGRES_USER: ${STATISTIC_DB_USERNAME}
      POSTGRES_PASSWORD: ${STATISTIC_DB_PASSWORD}
      POSTGRES_DB: ${STATISTIC_DB_NAME}
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - statisticdb_data:/var/lib/postgresql/data

  processing-kafka:
    image: payment_backend
    container_name: processing-kafka
    build:
      context: payment-processing/.
    ports:
      - "8080:8080"
      - "8091:8091"
    depends_on:
      - paymentDB
    environment:
      DATABASE_HOST: ${PAYMENT_DB_HOST}
      DATABASE_PORT: 5435
      DATABASE_NAME: ${PAYMENT_DB_NAME}
      DATABASE_USERNAME: ${PAYMENT_DB_USERNAME}
      DATABASE_PASSWORD: ${PAYMENT_DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVER: ${KAFKA_BOOTSTRAP_SERVER}
      LOAD_TESTING_ENTITIES_AMOUNT: 100000

  processing-debezium:
    image: payment_backend
    container_name: processing-debezium
    build:
      context: payment-processing/.
    ports:
      - "8082:8080"
      - "8093:8091"
    depends_on:
      - paymentDB
    environment:
      ACTIVE_PROFILE: "debezium"
      DATABASE_HOST: ${PAYMENT_DB_HOST}
      DATABASE_PORT: 5435
      DATABASE_NAME: ${PAYMENT_DB_NAME}
      DATABASE_USERNAME: ${PAYMENT_DB_USERNAME}
      DATABASE_PASSWORD: ${PAYMENT_DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVER: ${KAFKA_BOOTSTRAP_SERVER}
      LOAD_TESTING_ENTITIES_AMOUNT: 100000

  analyzing-kafka:
    image: analyzing_backend
    container_name: analyzing-kafka
    build:
      context: payment-analyzing/.
    ports:
      - "8084:8080"
      - "8095:8091"
    depends_on:
      - statisticDB
    environment:
      DATABASE_HOST: ${STATISTIC_DB_HOST}
      DATABASE_PORT: 5434
      DATABASE_NAME: ${STATISTIC_DB_NAME}
      DATABASE_USERNAME: ${STATISTIC_DB_USERNAME}
      DATABASE_PASSWORD: ${STATISTIC_DB_PASSWORD}
      PAYMENT_DATABASE_HOST: ${PAYMENT_DB_HOST}
      PAYMENT_DATABASE_PORT: 5435
      PAYMENT_DATABASE_NAME: ${PAYMENT_DB_NAME}
      PAYMENT_DATABASE_USERNAME: ${PAYMENT_DB_USERNAME}
      PAYMENT_DATABASE_PASSWORD: ${PAYMENT_DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVER: ${KAFKA_BOOTSTRAP_SERVER}

  analyzing-debezium:
    image: analyzing_backend
    container_name: analyzing-debezium
    build:
      context: payment-analyzing/.
    ports:
      - "8086:8080"
      - "8097:8091"
    depends_on:
      - statisticDB
    environment:
      ACTIVE_PROFILE: "debezium"
      DATABASE_HOST: ${STATISTIC_DB_HOST}
      DATABASE_PORT: 5434
      DATABASE_NAME: ${STATISTIC_DB_NAME}
      DATABASE_USERNAME: ${STATISTIC_DB_USERNAME}
      DATABASE_PASSWORD: ${STATISTIC_DB_PASSWORD}
      PAYMENT_DATABASE_HOST: ${PAYMENT_DB_HOST}
      PAYMENT_DATABASE_PORT: 5435
      PAYMENT_DATABASE_NAME: ${PAYMENT_DB_NAME}
      PAYMENT_DATABASE_USERNAME: ${PAYMENT_DB_USERNAME}
      PAYMENT_DATABASE_PASSWORD: ${PAYMENT_DB_PASSWORD}
      KAFKA_BOOTSTRAP_SERVER: ${KAFKA_BOOTSTRAP_SERVER}

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "payment.change.log:1:4"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    user: "$UID:$GID"
    ports:
      - "9090:9090"
    volumes:
      - ./:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/'

  grafana:
    image: grafana/grafana:11.0.0
    depends_on:
      - prometheus
    ports:
      - "3001:3001"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=3001
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SERVER_DOMAIN=localhost

volumes:
  paymentdb_data:
  statisticdb_data:
  prometheus_data:
  grafana_data: